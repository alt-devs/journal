# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type CompanyDto {
  id: Float
  name: String
  email: String
  photoPath: String
  description: String
  id_currency: Float
}

type CreateCompanyDto {
  id: Float!
  name: String!
  email: String!
  photoPath: String
  description: String
  id_currency: Float
}

type CreateCurrencyDto {
  id: Float!
  name: String!
}

type CreateUserDto {
  id: Float!
  login: String!
  password: String!
  lastActive: DateTime!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type CurrencyDto {
  id: Float
  name: String
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

type Mutation {
  createCompany(data: NewCompanyInput!): CompanyDto!
  updateCompany(data: UpdateCompanyDto!, id: Float!): CompanyDto!
  removeCompany(id: Float!): Boolean!
  createCurrency(data: NewCurrencyInput!): CreateCurrencyDto!
  updateCurrency(data: UpdateCurrencyDto!, id: Float!): CreateCurrencyDto!
  removeCurrency(id: Float!): Boolean!
  createUser(data: NewUserInput!): UserDto!
  updateUser(data: UpdateUserDto!, id: Float!): UserDto!
  removeUser(id: Float!): Boolean!
}

input NewCompanyInput {
  name: String!
  email: String!
  photoPath: String
  description: String
  id_currency: Float
}

input NewCurrencyInput {
  name: String!
}

input NewUserInput {
  login: String!
  password: String!
}

type Query {
  companies: [CompanyDto!]!
  currencies: [CreateCurrencyDto!]!
  users: [UserDto!]!
}

input UpdateCompanyDto {
  name: String
  email: String
  photoPath: String
  description: String
  id_currency: Float
}

input UpdateCurrencyDto {
  name: String!
}

input UpdateUserDto {
  password: String!
}

type UserDto {
  id: Float
  login: String
  password: String
  lastActive: DateTime
  createdAt: DateTime
  updatedAt: DateTime
}
